###### port dla aplikacji#######
#server.port = 8084

## H2
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2
## Datasource
#spring.datasource.url=jdbc:h2:file:~/test
#spring.datasource.username=admin
#spring.datasource.password=admin
#spring.datasource.driver-class-name=org.h2.Driver


### Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.url=jdbc:mariadb://192.168.8.25:3306/JavaTemp
spring.datasource.username=sylwlo
spring.datasource.password=123sylwlo
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update

### Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
#spring.datasource.url=jdbc:postgresql://localhost:5432/PGS
#spring.datasource.username= postgres
#spring.datasource.password=123sylwlo
#
## The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
#spring.jpa.hibernate.ddl-auto = update
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

#hibernate.hbm2ddl.auto — okreœla ona, jak hibernate ma siê zachowywaæ przy uruchomieniu. Dostêpne jest kilka opcji:
#validate — tylko weryfikuje, tej opcji powinniœmy u¿ywaæ w dzia³aj¹cej aplikacji, jeœli pojawi siê jakaœ niespójnoœæ, aplikacja siê nie uruchomi
#update — Hibernate w przypadku natrafienia na niespójnoœæ spróbuje j¹ usun¹æ poprzez modyfikacjê schematu; nara¿amy siê przez to na utratê danych, opcja nadaje siê g³ównie do testowania i rozwoju
#create — tworzy schemat i strukturê, usuwaj¹c istniej¹ce dane
#create-drop — podobnie jak create tworzy schemat i strukturê usuwaj¹c istniej¹ce dane, ale przy zamykaniu aplikacji automatycznie usuwa ca³¹ zawartoœæ u¿ywanej bazy danych
